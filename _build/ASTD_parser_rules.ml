type token =
  | BOOL of (string)
  | IDENTITY_NAME of (string)
  | STRING_VALUE of (string)
  | INT_VALUE of (int)
  | IMPORTS
  | ATTRIBUTES
  | CODE
  | FILE
  | LAMBDA
  | AUTOMATA
  | ELEM
  | BEGIN_ASTD
  | END_ASTD
  | CALL
  | TRUE
  | FALSE
  | SEQUENCE
  | CHOICE
  | PARALLEL
  | INTERLEAVE
  | LSYNCHRO
  | RSYNCHRO
  | LENV
  | RENV
  | GUARD
  | KLEENE
  | PLUS
  | QMARK
  | LPAR
  | RPAR
  | LINT
  | RINT
  | LSET
  | RSET
  | COLON
  | SCOLON
  | COMMA
  | IS
  | EQUALS
  | LINK
  | REMOVE
  | LOCAL
  | FROM_SUB
  | TO_SUB
  | UNDERSCORE
  | EOF

open Parsing;;
let _ = parse_error;;
# 3 "ASTD_parser_rules.mly"
  (* Header*)
  let astd_parser_debug = false ;;
  let astd_parser_msg m = if (astd_parser_debug) 
                          then (print_endline m )
                          else (ignore m);;

# 59 "_build/ASTD_parser_rules.ml"
let yytransl_const = [|
  261 (* IMPORTS *);
  262 (* ATTRIBUTES *);
  263 (* CODE *);
  264 (* FILE *);
  265 (* LAMBDA *);
  266 (* AUTOMATA *);
  267 (* ELEM *);
  268 (* BEGIN_ASTD *);
  269 (* END_ASTD *);
  270 (* CALL *);
  271 (* TRUE *);
  272 (* FALSE *);
  273 (* SEQUENCE *);
  274 (* CHOICE *);
  275 (* PARALLEL *);
  276 (* INTERLEAVE *);
  277 (* LSYNCHRO *);
  278 (* RSYNCHRO *);
  279 (* LENV *);
  280 (* RENV *);
  281 (* GUARD *);
  282 (* KLEENE *);
  283 (* PLUS *);
  284 (* QMARK *);
  285 (* LPAR *);
  286 (* RPAR *);
  287 (* LINT *);
  288 (* RINT *);
  289 (* LSET *);
  290 (* RSET *);
  291 (* COLON *);
  292 (* SCOLON *);
  293 (* COMMA *);
  294 (* IS *);
  295 (* EQUALS *);
  296 (* LINK *);
  297 (* REMOVE *);
  298 (* LOCAL *);
  299 (* FROM_SUB *);
  300 (* TO_SUB *);
  301 (* UNDERSCORE *);
    0 (* EOF *);
    0|]

let yytransl_block = [|
  257 (* BOOL *);
  258 (* IDENTITY_NAME *);
  259 (* STRING_VALUE *);
  260 (* INT_VALUE *);
    0|]

let yylhs = "\255\255\
\001\000\001\000\001\000\001\000\004\000\004\000\004\000\005\000\
\003\000\003\000\008\000\008\000\008\000\008\000\008\000\008\000\
\008\000\008\000\008\000\008\000\009\000\018\000\018\000\018\000\
\024\000\024\000\024\000\025\000\019\000\019\000\019\000\026\000\
\026\000\026\000\027\000\027\000\020\000\020\000\028\000\028\000\
\029\000\029\000\029\000\030\000\030\000\031\000\031\000\032\000\
\032\000\033\000\033\000\035\000\023\000\023\000\036\000\036\000\
\036\000\021\000\037\000\037\000\037\000\038\000\022\000\022\000\
\039\000\039\000\039\000\040\000\040\000\040\000\041\000\041\000\
\041\000\041\000\042\000\042\000\043\000\044\000\011\000\010\000\
\012\000\013\000\013\000\013\000\014\000\006\000\045\000\046\000\
\046\000\007\000\007\000\007\000\007\000\047\000\047\000\047\000\
\047\000\049\000\050\000\051\000\051\000\051\000\048\000\052\000\
\052\000\015\000\015\000\015\000\016\000\017\000\053\000\053\000\
\054\000\054\000\054\000\055\000\055\000\034\000\034\000\034\000\
\034\000\002\000\002\000\002\000\002\000\056\000\056\000\057\000\
\057\000\058\000\058\000\058\000\058\000\058\000\058\000\000\000\
\000\000"

let yylen = "\002\000\
\006\000\004\000\003\000\001\000\003\000\002\000\001\000\003\000\
\005\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\
\001\000\001\000\001\000\001\000\016\000\000\000\005\000\006\000\
\003\000\002\000\001\000\001\000\000\000\005\000\006\000\003\000\
\002\000\001\000\007\000\007\000\000\000\004\000\002\000\003\000\
\003\000\002\000\001\000\002\000\001\000\002\000\003\000\003\000\
\001\000\001\000\001\000\004\000\003\000\002\000\003\000\002\000\
\001\000\003\000\003\000\002\000\001\000\005\000\002\000\003\000\
\003\000\002\000\001\000\011\000\013\000\013\000\005\000\005\000\
\007\000\007\000\002\000\003\000\001\000\003\000\010\000\010\000\
\008\000\013\000\010\000\010\000\013\000\001\000\001\000\005\000\
\001\000\003\000\001\000\001\000\003\000\001\000\001\000\003\000\
\003\000\005\000\003\000\003\000\002\000\001\000\003\000\003\000\
\001\000\016\000\013\000\013\000\010\000\008\000\002\000\003\000\
\003\000\002\000\001\000\005\000\003\000\001\000\001\000\001\000\
\001\000\003\000\002\000\001\000\002\000\002\000\001\000\002\000\
\003\000\003\000\002\000\001\000\003\000\002\000\001\000\002\000\
\002\000"

let yydefred = "\000\000\
\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\
\010\000\011\000\012\000\013\000\014\000\015\000\016\000\017\000\
\018\000\019\000\000\000\137\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\126\000\000\000\123\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\089\000\000\000\000\000\000\000\000\000\
\086\000\000\000\000\000\128\000\000\000\122\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\
\000\000\000\000\000\000\000\000\129\000\000\000\000\000\000\000\
\000\000\000\000\000\000\087\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\009\000\000\000\
\000\000\005\000\000\000\000\000\008\000\000\000\092\000\000\000\
\000\000\133\000\130\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\039\000\000\000\000\000\000\000\000\000\001\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\028\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\
\000\000\088\000\000\000\000\000\000\000\090\000\099\000\103\000\
\000\000\093\000\096\000\097\000\023\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\111\000\000\000\000\000\110\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\041\000\000\000\
\000\000\075\000\000\000\077\000\000\000\081\000\000\000\104\000\
\100\000\024\000\025\000\000\000\030\000\000\000\000\000\038\000\
\000\000\058\000\000\000\000\000\000\000\000\000\000\000\112\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\076\000\000\000\098\000\000\000\031\000\
\032\000\000\000\059\000\000\000\063\000\000\000\000\000\000\000\
\118\000\119\000\120\000\121\000\117\000\000\000\113\000\079\000\
\000\000\080\000\000\000\084\000\000\000\083\000\000\000\000\000\
\078\000\109\000\000\000\000\000\000\000\064\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\062\000\000\000\000\000\000\000\065\000\000\000\054\000\000\000\
\000\000\116\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\053\000\000\000\085\000\
\108\000\107\000\000\000\082\000\036\000\035\000\000\000\000\000\
\000\000\055\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\021\000\106\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\044\000\000\000\068\000\000\000\000\000\000\000\
\046\000\000\000\000\000\050\000\051\000\000\000\000\000\000\000\
\000\000\047\000\000\000\000\000\069\000\070\000\000\000\048\000\
\000\000\071\000\072\000\052\000\000\000\073\000\074\000"

let yydgoto = "\003\000\
\007\000\020\000\008\000\054\000\055\000\056\000\109\000\009\000\
\010\000\011\000\012\000\013\000\014\000\015\000\016\000\017\000\
\018\000\064\000\088\000\119\000\153\000\229\000\025\001\148\000\
\149\000\186\000\187\000\100\000\131\000\086\001\091\001\098\001\
\099\001\100\001\101\001\040\001\190\000\191\000\254\000\255\000\
\087\001\168\000\211\000\212\000\091\000\092\000\110\000\111\000\
\112\000\113\000\141\000\142\000\155\000\196\000\197\000\021\000\
\035\000\061\000"

let yysindex = "\132\000\
\058\255\048\255\000\000\000\000\100\255\062\255\075\255\089\255\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\139\255\000\000\022\255\088\255\109\255\134\255\
\116\255\118\255\120\255\108\255\147\255\149\255\138\255\058\255\
\061\255\050\255\000\000\048\255\000\000\182\255\182\255\182\255\
\152\255\182\255\153\255\182\255\154\255\182\255\122\255\182\255\
\182\255\148\255\159\255\000\000\189\255\161\255\156\255\157\255\
\000\000\162\255\164\255\000\000\166\255\000\000\163\255\188\255\
\201\255\188\255\061\255\188\255\061\255\188\255\061\255\188\255\
\169\255\173\255\188\255\188\255\177\255\061\255\171\255\000\000\
\061\255\052\255\158\255\158\255\000\000\176\255\178\255\204\255\
\179\255\204\255\180\255\000\000\204\255\181\255\204\255\183\255\
\204\255\061\255\033\255\184\255\204\255\204\255\000\000\187\255\
\210\255\000\000\218\255\023\255\000\000\185\255\000\000\196\255\
\197\255\000\000\000\000\043\255\192\255\193\255\194\255\198\255\
\058\255\052\255\058\255\052\255\058\255\052\255\058\255\199\255\
\195\255\000\000\200\255\182\255\205\255\058\255\000\000\206\255\
\202\255\207\255\208\255\209\255\212\255\213\255\076\255\076\255\
\076\255\000\000\220\255\214\255\217\255\037\255\211\255\231\255\
\221\255\027\255\216\255\225\255\226\255\229\255\230\255\232\255\
\233\255\234\255\052\255\235\255\000\000\188\255\039\255\236\255\
\251\255\000\000\237\255\239\255\007\000\000\000\000\000\000\000\
\007\000\000\000\000\000\000\000\000\000\238\255\004\000\013\000\
\240\255\241\255\243\255\245\255\015\000\244\255\246\255\249\255\
\190\255\019\000\000\000\252\255\247\255\000\000\058\255\182\255\
\058\255\182\255\058\255\182\255\058\255\253\255\000\000\204\255\
\255\255\000\000\254\255\000\000\058\255\000\000\008\000\000\000\
\000\000\000\000\000\000\248\255\000\000\006\000\012\000\000\000\
\009\000\000\000\231\255\074\255\010\000\036\255\011\000\000\000\
\063\255\018\000\188\255\022\000\188\255\030\000\188\255\031\000\
\173\255\058\255\020\000\000\000\032\000\000\000\045\000\000\000\
\000\000\058\255\000\000\021\000\000\000\014\000\016\000\023\000\
\000\000\000\000\000\000\000\000\000\000\036\255\000\000\000\000\
\204\255\000\000\204\255\000\000\204\255\000\000\024\000\025\000\
\000\000\000\000\017\000\027\000\097\255\000\000\026\000\040\255\
\028\000\029\000\058\255\058\255\058\255\182\255\058\255\160\255\
\000\000\033\000\034\000\035\000\000\000\036\000\000\000\040\000\
\023\000\000\000\039\000\049\000\050\000\188\255\052\000\037\000\
\038\000\056\000\064\000\067\000\073\000\000\000\041\000\000\000\
\000\000\000\000\204\255\000\000\000\000\000\000\042\000\043\000\
\044\000\000\000\074\000\058\255\080\000\081\000\082\000\065\000\
\072\000\057\000\051\000\053\000\000\000\000\000\054\000\084\000\
\087\000\090\000\063\000\066\000\068\000\058\000\069\000\061\000\
\070\000\003\255\000\000\205\255\000\000\090\000\090\000\092\000\
\000\000\071\000\075\000\000\000\000\000\077\000\078\000\079\000\
\083\000\000\000\006\255\112\255\000\000\000\000\098\000\000\000\
\085\000\000\000\000\000\000\000\150\255\000\000\000\000"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\233\000\002\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\001\000\000\000\240\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\102\001\000\000\053\255\101\000\094\255\
\000\000\094\255\000\000\094\255\000\000\094\255\000\000\053\255\
\094\255\000\000\003\000\000\000\000\000\000\000\086\000\000\000\
\000\000\089\000\091\000\000\000\000\000\000\000\000\000\055\255\
\000\000\087\255\000\000\087\255\000\000\087\255\000\000\087\255\
\000\000\000\000\055\255\087\255\000\000\000\000\000\000\000\000\
\093\000\000\000\094\000\095\000\000\000\000\000\000\000\097\000\
\000\000\067\255\000\000\000\000\067\255\000\000\067\255\000\000\
\067\255\000\000\000\000\000\000\097\000\067\255\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\110\255\000\000\095\255\
\101\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\099\000\000\000\000\000\094\255\000\000\000\000\000\000\000\000\
\000\000\100\000\102\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\103\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\104\000\000\000\087\255\000\000\000\000\
\000\000\000\000\000\000\000\000\105\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\106\000\000\000\
\000\000\000\000\107\000\000\000\000\000\000\000\108\000\000\000\
\000\000\000\000\000\000\000\000\109\000\000\000\000\000\094\255\
\000\000\094\255\000\000\094\255\000\000\000\000\000\000\067\255\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\110\000\000\000\
\000\000\000\000\111\000\000\000\000\000\000\000\000\000\000\000\
\112\000\000\000\087\255\000\000\087\255\000\000\087\255\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\113\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\067\255\000\000\067\255\000\000\067\255\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\114\000\000\000\
\000\000\000\000\000\000\000\000\000\000\094\255\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\115\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\087\255\000\000\000\000\
\000\000\000\000\000\000\000\000\116\000\000\000\000\000\000\000\
\000\000\000\000\067\255\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\117\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\121\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000"

let yygindex = "\000\000\
\000\000\076\000\224\255\250\255\000\000\000\000\175\255\054\001\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\228\255\203\255\191\255\000\000\000\000\088\000\178\000\
\000\000\139\000\000\000\125\000\203\000\000\000\000\000\046\000\
\000\000\070\255\000\000\060\000\144\000\000\000\129\000\000\000\
\083\255\118\000\000\000\000\000\242\255\227\255\005\000\000\000\
\000\000\000\000\199\000\201\000\000\000\146\000\000\000\000\000\
\000\000\096\000"

let yytablesize = 466
let yytable = "\051\000\
\127\000\004\000\003\000\057\000\001\001\002\001\003\001\001\001\
\002\001\003\001\065\000\066\000\090\000\068\000\093\000\070\000\
\095\000\072\000\097\000\075\000\076\000\101\000\102\000\019\000\
\121\000\138\000\139\000\123\000\193\000\125\000\096\001\127\000\
\097\001\096\001\129\000\133\000\134\000\001\001\002\001\003\001\
\157\000\038\001\159\000\005\001\161\000\146\000\209\000\004\001\
\057\000\019\000\004\001\057\000\058\000\059\000\094\000\194\000\
\096\000\036\000\022\000\022\000\195\000\029\000\052\000\031\000\
\193\000\184\000\130\000\140\000\004\000\005\000\185\000\104\000\
\210\000\039\001\106\000\026\001\147\000\037\000\037\000\060\000\
\004\001\206\000\107\000\128\000\108\000\022\000\006\000\029\000\
\156\000\053\000\158\000\194\000\160\000\029\000\162\000\037\000\
\037\000\029\000\029\000\022\000\022\000\169\000\252\000\166\000\
\022\000\022\000\107\000\253\000\177\000\022\000\032\000\062\000\
\208\000\023\000\113\001\029\000\024\000\025\000\026\000\027\000\
\028\000\033\000\022\000\038\000\029\000\030\000\114\001\115\001\
\094\000\047\000\094\000\094\000\001\000\002\000\095\000\094\000\
\095\000\095\000\034\001\035\001\036\001\095\000\242\000\091\000\
\039\000\091\000\091\000\178\000\179\000\180\000\041\000\042\000\
\043\000\044\000\045\000\046\000\073\000\074\000\004\000\005\000\
\058\000\059\000\048\001\049\001\118\001\119\001\234\000\034\000\
\236\000\040\000\238\000\235\000\240\000\237\000\050\000\239\000\
\103\001\104\001\114\000\115\000\245\000\009\001\048\000\011\001\
\049\000\013\001\063\000\067\000\069\000\071\000\079\000\078\000\
\081\000\087\000\080\000\085\000\082\000\086\000\083\000\027\001\
\084\000\028\001\089\000\029\001\098\000\099\000\103\000\105\000\
\116\000\016\001\118\000\136\000\117\000\188\000\120\000\122\000\
\124\000\020\001\126\000\132\000\135\000\137\000\144\000\145\000\
\150\000\143\000\152\000\151\000\198\000\230\000\154\000\164\000\
\136\000\165\000\163\000\170\000\129\000\167\000\171\000\124\000\
\215\000\138\000\174\000\172\000\173\000\175\000\176\000\182\000\
\059\001\068\001\043\001\044\001\045\001\183\000\047\001\181\000\
\192\000\046\001\127\000\189\000\199\000\200\000\146\000\214\000\
\201\000\202\000\139\000\203\000\204\000\205\000\220\000\213\000\
\225\000\218\000\222\000\221\000\231\000\226\000\017\001\223\000\
\224\000\228\000\227\000\233\000\247\000\232\000\008\001\244\000\
\241\000\243\000\010\001\073\001\127\000\004\000\003\000\246\000\
\184\000\248\000\012\001\014\001\018\001\000\001\019\001\022\001\
\250\000\021\001\006\001\056\001\023\001\032\001\252\000\024\001\
\033\001\063\001\042\001\030\001\031\001\057\001\058\001\041\001\
\060\001\064\001\061\001\062\001\065\001\050\001\051\001\052\001\
\053\001\054\001\038\001\072\001\067\001\077\001\069\001\070\001\
\071\001\074\001\075\001\076\001\078\001\083\001\079\001\080\001\
\084\001\081\001\082\001\085\001\088\001\105\001\092\001\089\001\
\090\001\094\001\093\001\116\001\106\001\125\000\022\000\077\000\
\219\000\249\000\095\001\109\001\110\001\015\001\207\000\107\001\
\066\001\108\001\251\000\217\000\216\000\111\001\135\000\007\000\
\132\000\117\001\007\001\134\000\131\000\000\000\006\000\000\000\
\055\001\037\000\000\000\000\000\043\000\105\000\000\000\102\000\
\027\000\042\000\101\000\026\000\034\000\061\000\115\000\033\000\
\060\000\114\000\067\000\066\000\057\000\056\000\049\000\037\001\
\112\001\045\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\102\001"

let yycheck = "\032\000\
\000\000\000\000\000\000\033\000\002\001\003\001\004\001\002\001\
\003\001\004\001\039\000\040\000\066\000\042\000\068\000\044\000\
\070\000\046\000\072\000\048\000\049\000\075\000\076\000\002\001\
\090\000\003\001\004\001\093\000\002\001\095\000\028\001\097\000\
\030\001\028\001\002\001\101\000\102\000\002\001\003\001\004\001\
\122\000\002\001\124\000\230\000\126\000\003\001\008\001\045\001\
\078\000\002\001\045\001\081\000\003\001\004\001\069\000\029\001\
\071\000\036\001\006\001\007\001\034\001\007\001\002\001\002\001\
\002\001\029\001\034\001\045\001\011\001\012\001\034\001\078\000\
\034\001\034\001\081\000\006\001\034\001\011\001\012\001\030\001\
\045\001\163\000\031\001\098\000\033\001\033\001\029\001\033\001\
\121\000\029\001\123\000\029\001\125\000\007\001\127\000\029\001\
\021\000\011\001\012\001\006\001\007\001\134\000\029\001\132\000\
\011\001\012\001\031\001\034\001\033\001\010\001\036\001\036\000\
\166\000\014\001\003\001\029\001\017\001\018\001\019\001\020\001\
\021\001\033\001\029\001\036\001\025\001\026\001\015\001\016\001\
\034\001\022\001\036\001\037\001\001\000\002\000\034\001\041\001\
\036\001\037\001\042\001\043\001\044\001\041\001\208\000\034\001\
\036\001\036\001\037\001\143\000\144\000\145\000\035\001\036\001\
\035\001\036\001\035\001\036\001\035\001\036\001\011\001\012\001\
\003\001\004\001\003\001\004\001\015\001\016\001\199\000\029\001\
\201\000\036\001\203\000\200\000\205\000\202\000\037\001\204\000\
\094\001\095\001\083\000\084\000\213\000\235\000\036\001\237\000\
\036\001\239\000\005\001\036\001\036\001\036\001\002\001\033\001\
\037\001\006\001\034\001\030\001\040\001\035\001\037\001\009\001\
\037\001\011\001\002\001\013\001\036\001\033\001\030\001\037\001\
\033\001\242\000\007\001\002\001\035\001\003\001\036\001\036\001\
\036\001\250\000\036\001\036\001\034\001\004\001\027\001\027\001\
\033\001\041\001\033\001\035\001\013\001\040\001\033\001\037\001\
\000\000\034\001\036\001\030\001\002\001\033\001\037\001\000\000\
\004\001\003\001\034\001\037\001\037\001\034\001\034\001\034\001\
\046\001\059\001\027\001\028\001\029\001\037\001\031\001\036\001\
\036\001\030\001\002\001\029\001\036\001\036\001\003\001\013\001\
\036\001\036\001\004\001\036\001\036\001\036\001\002\001\036\001\
\002\001\036\001\034\001\036\001\002\001\034\001\003\001\037\001\
\036\001\033\001\037\001\037\001\037\001\034\001\013\001\034\001\
\036\001\035\001\013\001\068\001\036\001\036\001\036\001\032\001\
\029\001\036\001\013\001\013\001\013\001\036\001\002\001\034\001\
\040\001\029\001\040\001\013\001\037\001\037\001\029\001\033\001\
\030\001\002\001\030\001\036\001\036\001\013\001\013\001\036\001\
\013\001\002\001\030\001\030\001\002\001\037\001\037\001\037\001\
\037\001\034\001\002\001\002\001\036\001\013\001\037\001\037\001\
\037\001\002\001\002\001\002\001\013\001\002\001\030\001\037\001\
\002\001\037\001\037\001\002\001\030\001\002\001\037\001\030\001\
\029\001\037\001\030\001\002\001\030\001\000\000\002\001\050\000\
\183\000\223\000\037\001\030\001\030\001\241\000\164\000\037\001\
\053\001\037\001\227\000\173\000\172\000\035\001\030\001\034\001\
\030\001\037\001\233\000\030\001\030\001\255\255\034\001\255\255\
\041\001\033\001\255\255\255\255\034\001\034\001\255\255\034\001\
\034\001\034\001\034\001\034\001\034\001\034\001\034\001\034\001\
\034\001\034\001\034\001\034\001\034\001\034\001\030\001\023\001\
\107\001\037\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\092\001"

let yynames_const = "\
  IMPORTS\000\
  ATTRIBUTES\000\
  CODE\000\
  FILE\000\
  LAMBDA\000\
  AUTOMATA\000\
  ELEM\000\
  BEGIN_ASTD\000\
  END_ASTD\000\
  CALL\000\
  TRUE\000\
  FALSE\000\
  SEQUENCE\000\
  CHOICE\000\
  PARALLEL\000\
  INTERLEAVE\000\
  LSYNCHRO\000\
  RSYNCHRO\000\
  LENV\000\
  RENV\000\
  GUARD\000\
  KLEENE\000\
  PLUS\000\
  QMARK\000\
  LPAR\000\
  RPAR\000\
  LINT\000\
  RINT\000\
  LSET\000\
  RSET\000\
  COLON\000\
  SCOLON\000\
  COMMA\000\
  IS\000\
  EQUALS\000\
  LINK\000\
  REMOVE\000\
  LOCAL\000\
  FROM_SUB\000\
  TO_SUB\000\
  UNDERSCORE\000\
  EOF\000\
  "

let yynames_block = "\
  BOOL\000\
  IDENTITY_NAME\000\
  STRING_VALUE\000\
  INT_VALUE\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 5 : unit) in
    let _3 = (Parsing.peek_val __caml_parser_env 3 : 'astd) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'domain_list) in
    Obj.repr(
# 48 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("structure 1st choice");
        print_endline "========================================" ;
        ASTD_astd.global_save_astd _3 _5 ;
        print_endline ("Registered: "^(ASTD_astd.get_name _3)) 
      )
# 507 "_build/ASTD_parser_rules.ml"
               : unit))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : 'astd) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'domain_list) in
    Obj.repr(
# 54 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("structure 2nd choice");
        print_endline "========================================" ;
        ASTD_astd.global_save_astd _1 _3 ;
        print_endline ("Registered: "^(ASTD_astd.get_name _1)) 
      )
# 519 "_build/ASTD_parser_rules.ml"
               : unit))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : unit) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'astd) in
    Obj.repr(
# 60 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("structure 1st choice");
        print_endline "========================================" ;
        ASTD_astd.global_save_astd _3 [] ;
        print_endline ("Registered: "^(ASTD_astd.get_name _3)) 
      )
# 531 "_build/ASTD_parser_rules.ml"
               : unit))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'astd) in
    Obj.repr(
# 66 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("structure 2nd choice");
        print_endline "========================================" ;
        ASTD_astd.global_save_astd _1 [] ;
        print_endline ("Registered: "^(ASTD_astd.get_name _1)) 
      )
# 542 "_build/ASTD_parser_rules.ml"
               : unit))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'domain_link) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'domain_list) in
    Obj.repr(
# 76 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("callable astd domain"); _1::_3 )
# 550 "_build/ASTD_parser_rules.ml"
               : 'domain_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'domain_link) in
    Obj.repr(
# 78 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("callable astd domain"); [_1] )
# 557 "_build/ASTD_parser_rules.ml"
               : 'domain_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'domain_link) in
    Obj.repr(
# 80 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("callable astd domain"); [_1] )
# 564 "_build/ASTD_parser_rules.ml"
               : 'domain_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'parameter_of_astd) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'complex_val_construction) in
    Obj.repr(
# 85 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("link var domain"); (_1,_3) )
# 572 "_build/ASTD_parser_rules.ml"
               : 'domain_link))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'type_astd) in
    Obj.repr(
# 90 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("astd 1st choice "^_2); let astd2 = ASTD_astd.rename_astd _4 _2 in begin astd2 end )
# 580 "_build/ASTD_parser_rules.ml"
               : 'astd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'type_astd) in
    Obj.repr(
# 92 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("astd 2nd choice");
        _1 )
# 588 "_build/ASTD_parser_rules.ml"
               : 'astd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'astd_automata) in
    Obj.repr(
# 99 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("type_astd automata "); _1 )
# 595 "_build/ASTD_parser_rules.ml"
               : 'type_astd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'astd_choice) in
    Obj.repr(
# 101 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("type_astd choix "); _1 )
# 602 "_build/ASTD_parser_rules.ml"
               : 'type_astd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'astd_sequence) in
    Obj.repr(
# 103 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("type_astd sequence "); _1 )
# 609 "_build/ASTD_parser_rules.ml"
               : 'type_astd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'astd_kleene) in
    Obj.repr(
# 105 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("type_astd kleene "); _1 )
# 616 "_build/ASTD_parser_rules.ml"
               : 'type_astd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'astd_synchronisation) in
    Obj.repr(
# 107 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("type_astd synchro "); _1 )
# 623 "_build/ASTD_parser_rules.ml"
               : 'type_astd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'astd_qchoice) in
    Obj.repr(
# 109 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("type_astd qchoice "); _1 )
# 630 "_build/ASTD_parser_rules.ml"
               : 'type_astd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'astd_qsynchro) in
    Obj.repr(
# 111 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("type_astd qsynch "); _1 )
# 637 "_build/ASTD_parser_rules.ml"
               : 'type_astd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'astd_guard) in
    Obj.repr(
# 113 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("type_astd guard "); _1 )
# 644 "_build/ASTD_parser_rules.ml"
               : 'type_astd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'astd_call) in
    Obj.repr(
# 115 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("type_astd call "); _1 )
# 651 "_build/ASTD_parser_rules.ml"
               : 'type_astd))
; (fun __caml_parser_env ->
    Obj.repr(
# 117 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("type_astd elem "); ASTD_astd.elem_of(ASTD_astd.give_name()) )
# 657 "_build/ASTD_parser_rules.ml"
               : 'type_astd))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 12 : 'list_of_imports) in
    let _5 = (Parsing.peek_val __caml_parser_env 11 : 'list_of_attributes) in
    let _6 = (Parsing.peek_val __caml_parser_env 10 : 'code) in
    let _7 = (Parsing.peek_val __caml_parser_env 9 : 'list_of_meanings) in
    let _9 = (Parsing.peek_val __caml_parser_env 7 : 'list_of_arrows) in
    let _11 = (Parsing.peek_val __caml_parser_env 5 : 'list_of_names) in
    let _13 = (Parsing.peek_val __caml_parser_env 3 : 'list_of_names) in
    let _15 = (Parsing.peek_val __caml_parser_env 1 : string) in
    Obj.repr(
# 123 "ASTD_parser_rules.mly"
    ( ASTD_astd.automata_of (ASTD_astd.give_name ()) _5 _6 _7 _9 _11 _13 _15 )
# 671 "_build/ASTD_parser_rules.ml"
               : 'astd_automata))
; (fun __caml_parser_env ->
    Obj.repr(
# 128 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("No imports "); )
# 677 "_build/ASTD_parser_rules.ml"
               : 'list_of_imports))
; (fun __caml_parser_env ->
    Obj.repr(
# 130 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("Empty list of imports "); )
# 683 "_build/ASTD_parser_rules.ml"
               : 'list_of_imports))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'list_of_imports_content) in
    Obj.repr(
# 132 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("List of imports "); )
# 690 "_build/ASTD_parser_rules.ml"
               : 'list_of_imports))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'my_import) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'list_of_imports_content) in
    Obj.repr(
# 137 "ASTD_parser_rules.mly"
    ()
# 698 "_build/ASTD_parser_rules.ml"
               : 'list_of_imports_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'my_import) in
    Obj.repr(
# 139 "ASTD_parser_rules.mly"
    ()
# 705 "_build/ASTD_parser_rules.ml"
               : 'list_of_imports_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'my_import) in
    Obj.repr(
# 141 "ASTD_parser_rules.mly"
    ()
# 712 "_build/ASTD_parser_rules.ml"
               : 'list_of_imports_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 146 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("import created ");
        (ASTD_plugin_builder.add_import _1) )
# 720 "_build/ASTD_parser_rules.ml"
               : 'my_import))
; (fun __caml_parser_env ->
    Obj.repr(
# 152 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("No attributes "); 
        [] )
# 727 "_build/ASTD_parser_rules.ml"
               : 'list_of_attributes))
; (fun __caml_parser_env ->
    Obj.repr(
# 155 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("Empty list of attributes "); 
        [] )
# 734 "_build/ASTD_parser_rules.ml"
               : 'list_of_attributes))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'list_of_attributes_content) in
    Obj.repr(
# 158 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("List of attributes "); 
        _4 )
# 742 "_build/ASTD_parser_rules.ml"
               : 'list_of_attributes))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'attribute) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'list_of_attributes_content) in
    Obj.repr(
# 164 "ASTD_parser_rules.mly"
      ( _1::_3 )
# 750 "_build/ASTD_parser_rules.ml"
               : 'list_of_attributes_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'attribute) in
    Obj.repr(
# 166 "ASTD_parser_rules.mly"
      ( _1::[] )
# 757 "_build/ASTD_parser_rules.ml"
               : 'list_of_attributes_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'attribute) in
    Obj.repr(
# 168 "ASTD_parser_rules.mly"
      ( _1::[] )
# 764 "_build/ASTD_parser_rules.ml"
               : 'list_of_attributes_content))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _6 = (Parsing.peek_val __caml_parser_env 1 : int) in
    Obj.repr(
# 173 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("attribute created ");
        ASTD_attribute.attribute_of (ASTD_variable.variable_of _2 _4 false) (ASTD_constant.of_int _6) )
# 774 "_build/ASTD_parser_rules.ml"
               : 'attribute))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _6 = (Parsing.peek_val __caml_parser_env 1 : string) in
    Obj.repr(
# 176 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("attribute created "); 
        ASTD_attribute.attribute_of (ASTD_variable.variable_of _2 _4 false) (ASTD_constant.of_string _6) )
# 784 "_build/ASTD_parser_rules.ml"
               : 'attribute))
; (fun __caml_parser_env ->
    Obj.repr(
# 182 "ASTD_parser_rules.mly"
    ( None )
# 790 "_build/ASTD_parser_rules.ml"
               : 'code))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 1 : string) in
    Obj.repr(
# 184 "ASTD_parser_rules.mly"
    ( ASTD_action.action_of_string _3 )
# 797 "_build/ASTD_parser_rules.ml"
               : 'code))
; (fun __caml_parser_env ->
    Obj.repr(
# 188 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("Empty label list");[] )
# 803 "_build/ASTD_parser_rules.ml"
               : 'list_of_labels))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'list_of_labels_content) in
    Obj.repr(
# 190 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("Label list");_2 )
# 810 "_build/ASTD_parser_rules.ml"
               : 'list_of_labels))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'list_of_labels_content) in
    Obj.repr(
# 196 "ASTD_parser_rules.mly"
      ( _1::_3 )
# 818 "_build/ASTD_parser_rules.ml"
               : 'list_of_labels_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    Obj.repr(
# 198 "ASTD_parser_rules.mly"
      ( _1::[] )
# 825 "_build/ASTD_parser_rules.ml"
               : 'list_of_labels_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 200 "ASTD_parser_rules.mly"
      ( _1::[] )
# 832 "_build/ASTD_parser_rules.ml"
               : 'list_of_labels_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'list_of_transition_params) in
    Obj.repr(
# 206 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("Transition construction " ^ _1); 
        ASTD_transition.transition (ASTD_label.of_string _1) _2 )
# 841 "_build/ASTD_parser_rules.ml"
               : 'transition))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 209 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("Transition without params construction " ^ _1); 
        ASTD_transition.transition (ASTD_label.of_string _1) [] )
# 849 "_build/ASTD_parser_rules.ml"
               : 'transition))
; (fun __caml_parser_env ->
    Obj.repr(
# 215 "ASTD_parser_rules.mly"
      ( [] )
# 855 "_build/ASTD_parser_rules.ml"
               : 'list_of_transition_params))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'list_of_transition_params_content) in
    Obj.repr(
# 217 "ASTD_parser_rules.mly"
      ( _2 )
# 862 "_build/ASTD_parser_rules.ml"
               : 'list_of_transition_params))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'transition_param) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'list_of_transition_params_content) in
    Obj.repr(
# 222 "ASTD_parser_rules.mly"
      ( _1::_3 )
# 870 "_build/ASTD_parser_rules.ml"
               : 'list_of_transition_params_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'transition_param) in
    Obj.repr(
# 224 "ASTD_parser_rules.mly"
      ( _1::[] )
# 877 "_build/ASTD_parser_rules.ml"
               : 'list_of_transition_params_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'term) in
    Obj.repr(
# 229 "ASTD_parser_rules.mly"
      ( ASTD_transition.parameter_from_term _1 )
# 884 "_build/ASTD_parser_rules.ml"
               : 'transition_param))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'captured_variable) in
    Obj.repr(
# 231 "ASTD_parser_rules.mly"
      ( ASTD_transition.parameter_from_capture _1 )
# 891 "_build/ASTD_parser_rules.ml"
               : 'transition_param))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 236 "ASTD_parser_rules.mly"
      ( ASTD_variable.variable_of _2 _4 true )
# 899 "_build/ASTD_parser_rules.ml"
               : 'captured_variable))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'list_of_names_content) in
    Obj.repr(
# 241 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("List of names "); 
        _2 )
# 907 "_build/ASTD_parser_rules.ml"
               : 'list_of_names))
; (fun __caml_parser_env ->
    Obj.repr(
# 244 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("List of names "); 
        [] )
# 914 "_build/ASTD_parser_rules.ml"
               : 'list_of_names))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'list_of_names_content) in
    Obj.repr(
# 251 "ASTD_parser_rules.mly"
      ( _1::_3 )
# 922 "_build/ASTD_parser_rules.ml"
               : 'list_of_names_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    Obj.repr(
# 253 "ASTD_parser_rules.mly"
      ( _1::[] )
# 929 "_build/ASTD_parser_rules.ml"
               : 'list_of_names_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 255 "ASTD_parser_rules.mly"
      ( _1::[] )
# 936 "_build/ASTD_parser_rules.ml"
               : 'list_of_names_content))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'list_of_meanings_content) in
    Obj.repr(
# 261 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("List of meanings "); 
        _2 )
# 944 "_build/ASTD_parser_rules.ml"
               : 'list_of_meanings))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'name_astd_link) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'list_of_meanings_content) in
    Obj.repr(
# 268 "ASTD_parser_rules.mly"
      ( _1::_3)
# 952 "_build/ASTD_parser_rules.ml"
               : 'list_of_meanings_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'name_astd_link) in
    Obj.repr(
# 270 "ASTD_parser_rules.mly"
      ( _1::[] )
# 959 "_build/ASTD_parser_rules.ml"
               : 'list_of_meanings_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'name_astd_link) in
    Obj.repr(
# 272 "ASTD_parser_rules.mly"
      ( _1::[] )
# 966 "_build/ASTD_parser_rules.ml"
               : 'list_of_meanings_content))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'astd) in
    Obj.repr(
# 278 "ASTD_parser_rules.mly"
      ( (ASTD_astd.rename_astd _4 _2) )
# 974 "_build/ASTD_parser_rules.ml"
               : 'name_astd_link))
; (fun __caml_parser_env ->
    Obj.repr(
# 284 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("List of arrows "); 
        [] )
# 981 "_build/ASTD_parser_rules.ml"
               : 'list_of_arrows))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'list_of_arrows_content) in
    Obj.repr(
# 287 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("List of arrows "); 
        _2 )
# 989 "_build/ASTD_parser_rules.ml"
               : 'list_of_arrows))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'arrow) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'list_of_arrows_content) in
    Obj.repr(
# 294 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("arrow created "); 
        _1::_3 )
# 998 "_build/ASTD_parser_rules.ml"
               : 'list_of_arrows_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'arrow) in
    Obj.repr(
# 297 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("arrow created "); 
        _1::[] )
# 1006 "_build/ASTD_parser_rules.ml"
               : 'list_of_arrows_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'arrow) in
    Obj.repr(
# 300 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("arrow created "); 
        _1::[] )
# 1014 "_build/ASTD_parser_rules.ml"
               : 'list_of_arrows_content))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 6 : string) in
    let _7 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _10 = (Parsing.peek_val __caml_parser_env 1 : 'arrow_end) in
    Obj.repr(
# 307 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("arrow local "); 
        let (a,b,c,d) = _10 in ASTD_arrow.local_arrow _5 _7 a b c d )
# 1024 "_build/ASTD_parser_rules.ml"
               : 'arrow))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 8 : string) in
    let _7 = (Parsing.peek_val __caml_parser_env 6 : string) in
    let _9 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _12 = (Parsing.peek_val __caml_parser_env 1 : 'arrow_end) in
    Obj.repr(
# 310 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("arrow fsub"); 
        let (a,b,c,d) = _12 in ASTD_arrow.fsub_arrow _7 _9 _5 a b c d )
# 1035 "_build/ASTD_parser_rules.ml"
               : 'arrow))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 8 : string) in
    let _7 = (Parsing.peek_val __caml_parser_env 6 : string) in
    let _9 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _12 = (Parsing.peek_val __caml_parser_env 1 : 'arrow_end) in
    Obj.repr(
# 313 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("arrow tsub"); 
        let (a,b,c,d) = _12 in ASTD_arrow.tsub_arrow _5 _9 _7 a b c d )
# 1046 "_build/ASTD_parser_rules.ml"
               : 'arrow))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : 'transition) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'list_of_guards) in
    Obj.repr(
# 320 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("detail of arrow t"); 
        (_1,_3,true,None) )
# 1055 "_build/ASTD_parser_rules.ml"
               : 'arrow_end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : 'transition) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'list_of_guards) in
    Obj.repr(
# 323 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("detail of arrow f"); 
        (_1,_3,false,None) )
# 1064 "_build/ASTD_parser_rules.ml"
               : 'arrow_end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 6 : 'transition) in
    let _3 = (Parsing.peek_val __caml_parser_env 4 : 'list_of_guards) in
    let _5 = (Parsing.peek_val __caml_parser_env 2 : string) in
    Obj.repr(
# 326 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("detail of arrow t"); 
        (_1,_3,true,ASTD_action.action_of_string _5) )
# 1074 "_build/ASTD_parser_rules.ml"
               : 'arrow_end))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 6 : 'transition) in
    let _3 = (Parsing.peek_val __caml_parser_env 4 : 'list_of_guards) in
    let _5 = (Parsing.peek_val __caml_parser_env 2 : string) in
    Obj.repr(
# 329 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("detail of arrow f"); 
        (_1,_3,false,ASTD_action.action_of_string _5) )
# 1084 "_build/ASTD_parser_rules.ml"
               : 'arrow_end))
; (fun __caml_parser_env ->
    Obj.repr(
# 336 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("List of guards "); 
        [] )
# 1091 "_build/ASTD_parser_rules.ml"
               : 'list_of_guards))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'list_of_guards_content) in
    Obj.repr(
# 339 "ASTD_parser_rules.mly"
      (_2)
# 1098 "_build/ASTD_parser_rules.ml"
               : 'list_of_guards))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'guard) in
    Obj.repr(
# 344 "ASTD_parser_rules.mly"
      ( _1::[] )
# 1105 "_build/ASTD_parser_rules.ml"
               : 'list_of_guards_content))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 349 "ASTD_parser_rules.mly"
      ( ASTD_guard.guard_of_string _3 )
# 1112 "_build/ASTD_parser_rules.ml"
               : 'guard))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 6 : 'list_of_imports) in
    let _5 = (Parsing.peek_val __caml_parser_env 5 : 'list_of_attributes) in
    let _6 = (Parsing.peek_val __caml_parser_env 4 : 'code) in
    let _7 = (Parsing.peek_val __caml_parser_env 3 : 'astd) in
    let _9 = (Parsing.peek_val __caml_parser_env 1 : 'astd) in
    Obj.repr(
# 355 "ASTD_parser_rules.mly"
      ( ASTD_astd.sequence_of (ASTD_astd.give_name ()) _5 _6 _7 _9 )
# 1123 "_build/ASTD_parser_rules.ml"
               : 'astd_sequence))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 6 : 'list_of_imports) in
    let _5 = (Parsing.peek_val __caml_parser_env 5 : 'list_of_attributes) in
    let _6 = (Parsing.peek_val __caml_parser_env 4 : 'code) in
    let _7 = (Parsing.peek_val __caml_parser_env 3 : 'astd) in
    let _9 = (Parsing.peek_val __caml_parser_env 1 : 'astd) in
    Obj.repr(
# 361 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("astd_choice "); ASTD_astd.choice_of (ASTD_astd.give_name ()) _5 _6 _7 _9 )
# 1134 "_build/ASTD_parser_rules.ml"
               : 'astd_choice))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 4 : 'list_of_imports) in
    let _5 = (Parsing.peek_val __caml_parser_env 3 : 'list_of_attributes) in
    let _6 = (Parsing.peek_val __caml_parser_env 2 : 'code) in
    let _7 = (Parsing.peek_val __caml_parser_env 1 : 'astd) in
    Obj.repr(
# 367 "ASTD_parser_rules.mly"
      ( ASTD_astd.kleene_of (ASTD_astd.give_name ()) _5 _6 _7 )
# 1144 "_build/ASTD_parser_rules.ml"
               : 'astd_kleene))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 8 : 'list_of_labels) in
    let _7 = (Parsing.peek_val __caml_parser_env 6 : 'list_of_imports) in
    let _8 = (Parsing.peek_val __caml_parser_env 5 : 'list_of_attributes) in
    let _9 = (Parsing.peek_val __caml_parser_env 4 : 'code) in
    let _10 = (Parsing.peek_val __caml_parser_env 3 : 'astd) in
    let _12 = (Parsing.peek_val __caml_parser_env 1 : 'astd) in
    Obj.repr(
# 373 "ASTD_parser_rules.mly"
      ( ASTD_astd.synchronisation_of (ASTD_astd.give_name ()) _5 _8 _9 _10 _12 )
# 1156 "_build/ASTD_parser_rules.ml"
               : 'astd_synchronisation))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 6 : 'list_of_imports) in
    let _5 = (Parsing.peek_val __caml_parser_env 5 : 'list_of_attributes) in
    let _6 = (Parsing.peek_val __caml_parser_env 4 : 'code) in
    let _7 = (Parsing.peek_val __caml_parser_env 3 : 'astd) in
    let _9 = (Parsing.peek_val __caml_parser_env 1 : 'astd) in
    Obj.repr(
# 377 "ASTD_parser_rules.mly"
      ( ASTD_astd.synchronisation_of (ASTD_astd.give_name ()) [] _5 _6 _7 _9 )
# 1167 "_build/ASTD_parser_rules.ml"
               : 'astd_synchronisation))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 6 : 'list_of_imports) in
    let _5 = (Parsing.peek_val __caml_parser_env 5 : 'list_of_attributes) in
    let _6 = (Parsing.peek_val __caml_parser_env 4 : 'code) in
    let _7 = (Parsing.peek_val __caml_parser_env 3 : 'astd) in
    let _9 = (Parsing.peek_val __caml_parser_env 1 : 'astd) in
    Obj.repr(
# 381 "ASTD_parser_rules.mly"
      ( ASTD_astd.parallelcomposition_of (ASTD_astd.give_name ()) _5 _6 _7 _9 )
# 1178 "_build/ASTD_parser_rules.ml"
               : 'astd_synchronisation))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 8 : 'quantification_variable) in
    let _7 = (Parsing.peek_val __caml_parser_env 6 : 'complex_val_construction) in
    let _9 = (Parsing.peek_val __caml_parser_env 4 : 'list_of_imports) in
    let _10 = (Parsing.peek_val __caml_parser_env 3 : 'list_of_attributes) in
    let _11 = (Parsing.peek_val __caml_parser_env 2 : 'code) in
    let _12 = (Parsing.peek_val __caml_parser_env 1 : 'astd) in
    Obj.repr(
# 387 "ASTD_parser_rules.mly"
      ( ASTD_astd.qchoice_of (ASTD_astd.give_name ()) _5 _7 _10 _11 [] _12 )
# 1190 "_build/ASTD_parser_rules.ml"
               : 'astd_qchoice))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'typed_variable) in
    Obj.repr(
# 392 "ASTD_parser_rules.mly"
    ( ASTD_variable.set_readonly _1 false )
# 1197 "_build/ASTD_parser_rules.ml"
               : 'parameter_of_astd))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'typed_variable) in
    Obj.repr(
# 396 "ASTD_parser_rules.mly"
    ( ASTD_variable.set_readonly _1 true )
# 1204 "_build/ASTD_parser_rules.ml"
               : 'quantification_variable))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : string) in
    Obj.repr(
# 400 "ASTD_parser_rules.mly"
      ( ASTD_variable.of_strings _2 _4 )
# 1212 "_build/ASTD_parser_rules.ml"
               : 'typed_variable))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 402 "ASTD_parser_rules.mly"
      ( ASTD_variable.of_strings _1 "int" )
# 1219 "_build/ASTD_parser_rules.ml"
               : 'typed_variable))
; (fun __caml_parser_env ->
    Obj.repr(
# 408 "ASTD_parser_rules.mly"
      ( ASTD_constant.Domain.add (ASTD_constant.value_of ASTD_constant.FreeConst) (ASTD_constant.Domain.empty) )
# 1225 "_build/ASTD_parser_rules.ml"
               : 'complex_val_construction))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'val_construction) in
    Obj.repr(
# 410 "ASTD_parser_rules.mly"
      ( _1 )
# 1232 "_build/ASTD_parser_rules.ml"
               : 'complex_val_construction))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'string_val_construction) in
    Obj.repr(
# 412 "ASTD_parser_rules.mly"
      ( _1 )
# 1239 "_build/ASTD_parser_rules.ml"
               : 'complex_val_construction))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'val_construction) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'val_construction) in
    Obj.repr(
# 414 "ASTD_parser_rules.mly"
      ( astd_parser_msg "Suppression from domain" ; ASTD_constant.remove_domain_from _3 _1 )
# 1247 "_build/ASTD_parser_rules.ml"
               : 'complex_val_construction))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'val_construction_range) in
    Obj.repr(
# 420 "ASTD_parser_rules.mly"
      ( _1 )
# 1254 "_build/ASTD_parser_rules.ml"
               : 'val_construction))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'val_construction_explicit) in
    Obj.repr(
# 422 "ASTD_parser_rules.mly"
      ( _1 )
# 1261 "_build/ASTD_parser_rules.ml"
               : 'val_construction))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'val_construction_range) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'val_construction) in
    Obj.repr(
# 424 "ASTD_parser_rules.mly"
      ( ASTD_constant.fusion _1 _3 )
# 1269 "_build/ASTD_parser_rules.ml"
               : 'val_construction))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'val_construction_explicit) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'val_construction) in
    Obj.repr(
# 426 "ASTD_parser_rules.mly"
      ( ASTD_constant.fusion _1 _3 )
# 1277 "_build/ASTD_parser_rules.ml"
               : 'val_construction))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : int) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int) in
    Obj.repr(
# 432 "ASTD_parser_rules.mly"
      ( astd_parser_msg "Construction from range" ; 
        ASTD_constant.Domain.add (ASTD_constant.range_of _2 _4) (ASTD_constant.Domain.empty) )
# 1286 "_build/ASTD_parser_rules.ml"
               : 'val_construction_range))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'list_val_content) in
    Obj.repr(
# 439 "ASTD_parser_rules.mly"
      ( astd_parser_msg "Explicit construction" ; 
        _2 )
# 1294 "_build/ASTD_parser_rules.ml"
               : 'val_construction_explicit))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'list_val_content) in
    Obj.repr(
# 446 "ASTD_parser_rules.mly"
      ( ASTD_constant.Domain.add (ASTD_constant.value_of(ASTD_constant.of_int _1)) _3 )
# 1302 "_build/ASTD_parser_rules.ml"
               : 'list_val_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int) in
    Obj.repr(
# 448 "ASTD_parser_rules.mly"
      ( ASTD_constant.Domain.add (ASTD_constant.value_of(ASTD_constant.of_int _1)) (ASTD_constant.Domain.empty) )
# 1309 "_build/ASTD_parser_rules.ml"
               : 'list_val_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 450 "ASTD_parser_rules.mly"
      ( ASTD_constant.Domain.add (ASTD_constant.value_of(ASTD_constant.of_int _1)) (ASTD_constant.Domain.empty) )
# 1316 "_build/ASTD_parser_rules.ml"
               : 'list_val_content))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'string_list_content) in
    Obj.repr(
# 455 "ASTD_parser_rules.mly"
      ( astd_parser_msg "Explicit construction" ; 
        _2 )
# 1324 "_build/ASTD_parser_rules.ml"
               : 'string_val_construction))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'string_list_content) in
    Obj.repr(
# 462 "ASTD_parser_rules.mly"
      ( ASTD_constant.Domain.add (ASTD_constant.value_of(ASTD_constant.Symbol (_1))) _3 )
# 1332 "_build/ASTD_parser_rules.ml"
               : 'string_list_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 464 "ASTD_parser_rules.mly"
      ( ASTD_constant.Domain.add (ASTD_constant.value_of(ASTD_constant.Symbol (_1))) (ASTD_constant.Domain.empty) )
# 1339 "_build/ASTD_parser_rules.ml"
               : 'string_list_content))
; (fun __caml_parser_env ->
    let _6 = (Parsing.peek_val __caml_parser_env 10 : 'quantification_variable) in
    let _8 = (Parsing.peek_val __caml_parser_env 8 : 'complex_val_construction) in
    let _10 = (Parsing.peek_val __caml_parser_env 6 : 'list_of_labels) in
    let _12 = (Parsing.peek_val __caml_parser_env 4 : 'list_of_imports) in
    let _13 = (Parsing.peek_val __caml_parser_env 3 : 'list_of_attributes) in
    let _14 = (Parsing.peek_val __caml_parser_env 2 : 'code) in
    let _15 = (Parsing.peek_val __caml_parser_env 1 : 'astd) in
    Obj.repr(
# 471 "ASTD_parser_rules.mly"
      (ASTD_astd.qsynchronisation_of (ASTD_astd.give_name ()) _6 (_8) _10 _13 _14 [] _15 )
# 1352 "_build/ASTD_parser_rules.ml"
               : 'astd_qsynchro))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 8 : 'quantification_variable) in
    let _7 = (Parsing.peek_val __caml_parser_env 6 : 'complex_val_construction) in
    let _9 = (Parsing.peek_val __caml_parser_env 4 : 'list_of_imports) in
    let _10 = (Parsing.peek_val __caml_parser_env 3 : 'list_of_attributes) in
    let _11 = (Parsing.peek_val __caml_parser_env 2 : 'code) in
    let _12 = (Parsing.peek_val __caml_parser_env 1 : 'astd) in
    Obj.repr(
# 475 "ASTD_parser_rules.mly"
      (ASTD_astd.qsynchronisation_of (ASTD_astd.give_name ()) _5 (_7) [] _10 _11 [] _12 )
# 1364 "_build/ASTD_parser_rules.ml"
               : 'astd_qsynchro))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 8 : 'quantification_variable) in
    let _7 = (Parsing.peek_val __caml_parser_env 6 : 'complex_val_construction) in
    let _9 = (Parsing.peek_val __caml_parser_env 4 : 'list_of_imports) in
    let _10 = (Parsing.peek_val __caml_parser_env 3 : 'list_of_attributes) in
    let _11 = (Parsing.peek_val __caml_parser_env 2 : 'code) in
    let _12 = (Parsing.peek_val __caml_parser_env 1 : 'astd) in
    Obj.repr(
# 479 "ASTD_parser_rules.mly"
      (ASTD_astd.qparallelcomposition_of (ASTD_astd.give_name ()) _5 (_7) _10 _11 [] _12 )
# 1376 "_build/ASTD_parser_rules.ml"
               : 'astd_qsynchro))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 6 : 'list_of_imports) in
    let _5 = (Parsing.peek_val __caml_parser_env 5 : 'list_of_attributes) in
    let _6 = (Parsing.peek_val __caml_parser_env 4 : 'code) in
    let _7 = (Parsing.peek_val __caml_parser_env 3 : 'list_of_guards) in
    let _9 = (Parsing.peek_val __caml_parser_env 1 : 'astd) in
    Obj.repr(
# 485 "ASTD_parser_rules.mly"
      ( ASTD_astd.guard_of (ASTD_astd.give_name ()) _5 _6 _7 _9 )
# 1387 "_build/ASTD_parser_rules.ml"
               : 'astd_guard))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 4 : 'list_of_imports) in
    let _5 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _7 = (Parsing.peek_val __caml_parser_env 1 : 'fct_vect) in
    Obj.repr(
# 491 "ASTD_parser_rules.mly"
      ( ASTD_astd.call_of (ASTD_astd.give_name ()) _5 _7)
# 1396 "_build/ASTD_parser_rules.ml"
               : 'astd_call))
; (fun __caml_parser_env ->
    Obj.repr(
# 497 "ASTD_parser_rules.mly"
      ( [] )
# 1402 "_build/ASTD_parser_rules.ml"
               : 'fct_vect))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'fct_vect_content) in
    Obj.repr(
# 499 "ASTD_parser_rules.mly"
      ( _2 )
# 1409 "_build/ASTD_parser_rules.ml"
               : 'fct_vect))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'fct_assoc) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'fct_vect_content) in
    Obj.repr(
# 505 "ASTD_parser_rules.mly"
      ( _1::_3 )
# 1417 "_build/ASTD_parser_rules.ml"
               : 'fct_vect_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'fct_assoc) in
    Obj.repr(
# 507 "ASTD_parser_rules.mly"
      ( _1::[] )
# 1424 "_build/ASTD_parser_rules.ml"
               : 'fct_vect_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'fct_assoc) in
    Obj.repr(
# 509 "ASTD_parser_rules.mly"
      ( _1::[] )
# 1431 "_build/ASTD_parser_rules.ml"
               : 'fct_vect_content))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'term) in
    Obj.repr(
# 515 "ASTD_parser_rules.mly"
      ( _2, _4 )
# 1439 "_build/ASTD_parser_rules.ml"
               : 'fct_assoc))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'term) in
    Obj.repr(
# 518 "ASTD_parser_rules.mly"
      ( _1, _3 )
# 1447 "_build/ASTD_parser_rules.ml"
               : 'fct_assoc))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 523 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("term "); 
        (ASTD_term.Var(ASTD_variable.variable_name_of_string _1)))
# 1455 "_build/ASTD_parser_rules.ml"
               : 'term))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 526 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("term "); 
        (ASTD_term.Const(ASTD_constant.Symbol(_1))) )
# 1463 "_build/ASTD_parser_rules.ml"
               : 'term))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 529 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("term "); 
        (ASTD_term.Const(ASTD_constant.of_int (_1))))
# 1471 "_build/ASTD_parser_rules.ml"
               : 'term))
; (fun __caml_parser_env ->
    Obj.repr(
# 532 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("term "); 
        (ASTD_term.Const(ASTD_constant.FreeConst)) )
# 1478 "_build/ASTD_parser_rules.ml"
               : 'term))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'event_to_apply) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : ASTD_event.t list) in
    Obj.repr(
# 552 "ASTD_parser_rules.mly"
     (_1::_3)
# 1486 "_build/ASTD_parser_rules.ml"
               : ASTD_event.t list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'event_to_apply) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : ASTD_event.t list) in
    Obj.repr(
# 554 "ASTD_parser_rules.mly"
     (_1::_2)
# 1494 "_build/ASTD_parser_rules.ml"
               : ASTD_event.t list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'event_to_apply) in
    Obj.repr(
# 556 "ASTD_parser_rules.mly"
     (_1::[])
# 1501 "_build/ASTD_parser_rules.ml"
               : ASTD_event.t list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'event_to_apply) in
    Obj.repr(
# 558 "ASTD_parser_rules.mly"
     (_1::[])
# 1508 "_build/ASTD_parser_rules.ml"
               : ASTD_event.t list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'list_of_value) in
    Obj.repr(
# 563 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("Event " ^ _1); 
        ASTD_event.event (ASTD_label.of_string _1) _2 )
# 1517 "_build/ASTD_parser_rules.ml"
               : 'event_to_apply))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 566 "ASTD_parser_rules.mly"
      ( astd_parser_msg ("Transition without params construction " ^ _1); 
        ASTD_event.event (ASTD_label.of_string _1) [] )
# 1525 "_build/ASTD_parser_rules.ml"
               : 'event_to_apply))
; (fun __caml_parser_env ->
    Obj.repr(
# 572 "ASTD_parser_rules.mly"
    ( [] )
# 1531 "_build/ASTD_parser_rules.ml"
               : 'list_of_value))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'list_of_value_content) in
    Obj.repr(
# 574 "ASTD_parser_rules.mly"
      (_2)
# 1538 "_build/ASTD_parser_rules.ml"
               : 'list_of_value))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'list_of_value_content) in
    Obj.repr(
# 579 "ASTD_parser_rules.mly"
      ( (ASTD_constant.of_int _1)::_3 )
# 1546 "_build/ASTD_parser_rules.ml"
               : 'list_of_value_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : int) in
    Obj.repr(
# 581 "ASTD_parser_rules.mly"
      ( (ASTD_constant.of_int _1)::[] )
# 1553 "_build/ASTD_parser_rules.ml"
               : 'list_of_value_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 583 "ASTD_parser_rules.mly"
      ( (ASTD_constant.of_int _1)::[] )
# 1560 "_build/ASTD_parser_rules.ml"
               : 'list_of_value_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'list_of_value_content) in
    Obj.repr(
# 585 "ASTD_parser_rules.mly"
      ( (ASTD_constant.Symbol (_1))::_3 )
# 1568 "_build/ASTD_parser_rules.ml"
               : 'list_of_value_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    Obj.repr(
# 587 "ASTD_parser_rules.mly"
      ( (ASTD_constant.Symbol (_1))::[] )
# 1575 "_build/ASTD_parser_rules.ml"
               : 'list_of_value_content))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 589 "ASTD_parser_rules.mly"
      ( (ASTD_constant.Symbol (_1))::[] )
# 1582 "_build/ASTD_parser_rules.ml"
               : 'list_of_value_content))
(* Entry structure *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
(* Entry apply_event *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let structure (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : unit)
let apply_event (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 2 lexfun lexbuf : ASTD_event.t list)
